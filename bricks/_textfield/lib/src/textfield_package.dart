import 'package:flutter/material.dart';

import 'common/common_base_textfield.dart';

class TextfieldBrick {
  static Widget common({
    ValueChanged<String>? onChanged,
    ValueChanged<String>? onSubmit,
    String? initialValue,
    TextEditingController? textEditingController,
    FocusNode? focusNode,
    bool? autoFocus,
    bool? enable,
    bool? isRequired,
    String? label,
    String? hintText,
    String? errorText,
    required TextStyle textStyle,
    required TextStyle labelTextStyle,
    required TextStyle hintTextStyle,
    required TextStyle errorTextStyle,
    required Color focusBorderColor,
    required Color errorBorderColor,
    required Color enableBorderColor,
    required Color disableBorderColor,
    required Color backgroundColor,
    required Color disableTextColor,
    required Color disableBackgroundColor,
    bool? isObscured,
    TextAlign? textAlign,
    TextAlignVertical? textAlignVertical,
    TextInputAction? textInputAction,
    TextInputType? textInputType,
    EdgeInsets? contentPadding,
    BorderRadius? borderRadius,
    double? borderWidth,
    List<BoxShadow>? shadow,
    TextCapitalization? textCapitalization,
    int? maxLength,
    int? maxLines,
    bool? readOnly,
    String? prefixIconPath,
    String? suffixIconPath,
    VoidCallback? onSuffixIconTap,
    VoidCallback? onPrefixIconTap,
    double? iconSize,
    Color? iconColor,
  }) {
    return CommonBaseTextfield(
      onChanged: onChanged,
      onSubmit: onSubmit,
      initialValue: initialValue,
      textEditingController: textEditingController,
      focusNode: focusNode,
      autoFocus: autoFocus,
      enable: enable,
      isRequired: isRequired,
      label: label,
      errorText: errorText,
      hintText: hintText,
      textStyle: textStyle,
      labelTextStyle: labelTextStyle,
      hintTextStyle: hintTextStyle,
      errorTextStyle: errorTextStyle,
      focusBorderColor: focusBorderColor,
      errorBorderColor: errorBorderColor,
      enableBorderColor: enableBorderColor,
      disableBorderColor: disableBorderColor,
      disableTextColor: disableTextColor,
      backgroundColor: backgroundColor,
      disableBackgroundColor: disableBackgroundColor,
      isObscured: isObscured,
      textAlign: textAlign,
      textAlignVertical: textAlignVertical,
      textInputAction: textInputAction,
      textInputType: textInputType,
      contentPadding: contentPadding,
      borderRadius: borderRadius,
      borderWidth: borderWidth,
      shadow: shadow,
      textCapitalization: textCapitalization,
      maxLength: maxLength,
      maxLines: maxLines,
      readOnly: readOnly,
      prefixIconPath: prefixIconPath,
      suffixIconPath: suffixIconPath,
      onPrefixIconTap: onPrefixIconTap,
      onSuffixIconTap: onSuffixIconTap,
      iconSize: iconSize,
      iconColor: iconColor,
    );
  }
}
